Cp <- 1e3 # J/(kg*degC)
deltaT <- 5 # degC
rho * volume * Cp * deltaT # J
heat <- rho * volume * Cp * deltaT # J
heat / 1e3 / 3600
heat <- rho * volume * Cp * deltaT # J * 15.06
rho * volume * Cp * deltaT * 15.06
rho * volume * Cp * deltaT /1e3/3600 * 15.06
100/.6
60*.6
mirrors()
p <- gsub(".*'(.*)'.*$","\\1", l[grep("^\\s*'(.*)'.*$",l)])
l <- readLines("install_packages.R")
d<-read.csv("~/Downloads/2010_2016.csv")
d[,1]
d[[,1]]
names(d)
plot(d[2:13,2], d[2:13,3])
d[2:13,2]
plot(d[2:13,1], d[2:13,2])
plot(as.numeric(d[2:13,1]), d[2:13,2])
plot(as.numeric(d[2:13,1]), d[2:13,2], type='o')
plot(as.numeric(d[2:13,1]), d[2:13,2], type='b')
d[2:13,1]
as.numeric(d[3:14,1])
d<-read.csv("~/Downloads/2010_2016.csv",stringsAsFactors=FALSE)
d<-read.csv("~/Downloads/2010_2016.csv",stringsAsFactors=FALSE,skip=2)
plot(d$V1, d$V2)
plot(d$V1, d$V2, type='o')
plot(d$V1, d$V2, type='o');lines(d$V4,d$V5,col=2);lines(d$V7,d$V8,col=3);lines(d$V10,d$V11,col=4);lines(d$V13,d$V14,col=5);lines(d$V16,d$V17,col=6);lines(d$V19,d$V20,col=7)
plot(d$V1, d$V2, type='l',ylim=c(9000,18000),xlab="Month",ylab="Flow [m^3/s]");lines(d$V4,d$V5,col=2);lines(d$V7,d$V8,col=3);lines(d$V10,d$V11,col=4);lines(d$V13,d$V14,col=5);lines(d$V16,d$V17,col=6);lines(d$V19,d$V20,col=7)
plot(d$V1, d$V2, type='l',ylim=c(9000,20000),xlab="Month",ylab="Flow [m^3/s]");lines(d$V4,d$V5,col=2);lines(d$V7,d$V8,col=3);lines(d$V10,d$V11,col=4);lines(d$V13,d$V14,col=5);lines(d$V16,d$V17,col=6);lines(d$V19,d$V20,col=7)
d<-read.csv("~/Downloads/2010_2016.csv",stringsAsFactors=FALSE,skip=2,header=FALSE)
plot(d$V1, d$V2, type='l',ylim=c(9000,25000),xlab="Month",ylab="Flow [m^3/s]");lines(d$V4,d$V5,col=2);lines(d$V7,d$V8,col=3);lines(d$V10,d$V11,col=4);lines(d$V13,d$V14,col=5);lines(d$V16,d$V17,col=6);lines(d$V19,d$V20,col=7)
plot(d$V1, d$V2, type='l',ylim=c(9000,25000),xlab="Month",ylab="Flow [m^3/s]");lines(d$V4,d$V5,col=2);lines(d$V7,d$V8,col=3);lines(d$V10,d$V11,col=4);lines(d$V13,d$V14,col=5);lines(d$V16,d$V17,col=6);lines(d$V19,d$V20,col=7);legend("topright",lwd=1,col=1:6,legend=2010:2016)
pdf("a.pdf",height=5)
par(mar=c(3,3,1,1),mgp=c(2,0.7,0))
plot(d$V1, d$V2, type='l',ylim=c(9000,25000),xlab="Month",ylab="Flow [m^3/s]");lines(d$V4,d$V5,col=2);lines(d$V7,d$V8,col=3);lines(d$V10,d$V11,col=4);lines(d$V13,d$V14,col=5);lines(d$V16,d$V17,col=6);lines(d$V19,d$V20,col=7);legend("topright",lwd=1,col=1:7,legend=2010:2016)
dev.off()
rep(c(1,2),4)
rep(c(1:4),2)
lty<-rep(1:2,4)
col<-rep(1:4,2)
str(d)
cbind(d$V1, d$V2, d$V5, d$V8, d$V11, d$V14, d$V17, d$V19)
cbind(d$V1, d$V2, d$V5, d$V8, d$V11, d$V14, d$V17, d$V20)
flow <- cbind(d$V1, d$V2, d$V5, d$V8, d$V11, d$V14, d$V17, d$V20)
d <- read.csv("sl_flow.csv", stringsAsFactors=FALSE, skip=2, header=FALSE)
library(deSolve)
out
head(out)
?lsoda
abline(h=sqrt(parms$g*parms$R/parms$cd), col=2, lwd=100)
print(sqrt(parms$g*parms$R/parms$cd))
base::source("/Users/kelley/Library/Containers/com.apple.mail/Data/Library/Mail Downloads/FE86F28E-A0BB-4956-9710-34F4FB950FDB/lsodatest.R")
base::source("/Users/kelley/Library/Containers/com.apple.mail/Data/Library/Mail Downloads/FE86F28E-A0BB-4956-9710-34F4FB950FDB/lsodatest.R", echo=TRUE)
library(shiny)
data(ctdRaw)
ctd <- ctdRaw
base::source("/Users/kelley/git/oar/tutorial/shiny/CTD-edit2/CTD-edit2.R")
shinyApp(ui, server)
ifthen(T,1,2)
ifelse(T,1,2)
mapPlot(coastlineWorld, type="l", col="lightgray",
mapPlot(coastlineWorld, type="l", col="lightgray",border=2,
mapPlot(coastlineWorld, type="polygon", col="lightgray",
mapPlot(coastlineWorld, col="lightgray",
mapPlot(coastlineWorld, #col="lightgray",
projection="+proj=robin", drawBox=FALSE)
mapPlot(coastlineWorld, projection="+proj=robin", drawBox=FALSE)
data(endeavour, package="ocedata")
mapPoints(endeavour$longitude, endeavour$latitude,
pch=20, cex=0.5)
help(sunAngle)
sun
oce.plot.ts(t, sun$altitute, type="l")
lines(t, moon$altitude, col="blue")
moon
t0 <- as.POSIXct("2017-08-21 00:00:00", tz="UTC")
t <- seq(from=t0, by="10 min", length.out=100)
lat <- 44.67
lon <- -63.61
sun <- sunAngle(t, lon, lat)
moon <- moonAngle(t, lon, lat)
par(mfrow=c(2, 1))
oce.plot.ts(t, sun$altitute, type="l", col="red")
help(oce.plot.ts)
class(t)
str(sun)
head(t)
oce.plot.ts(t, sun$altitute, col="red")
oce.plot.ts(sun$time, sun$altitute, col="red")
plot(sun$time, sun$altitute, col="red")
sun$time[1]
sun$time[1:3]
class(sun$time)
t <- as.POSIXct(t)
plot(sun$time, sun$altitute, col="red", type="l")
sun$time
rm(list=ls())
names(sun)
sun$altitude
t[best]
tlocal[best]
base::source("/Users/kelley/git/oar/sandbox/eclipse_20170821.R", echo=TRUE)
length(salt)
length(malt)
length(sazi)
length(mazi)
tlocal[1]
t[1]
which.min(dist2)
best
dist-dist2
max(abs(dist-dist2))
base::source("/Users/kelley/git/oar/sandbox/eclipse_20170821.R")
source("~/Dropbox/a.R")
length(x)
str(xy)
str(xorig)
str(topo)
isTopo
str(longitude)
x
longitude
latitude
lonlat2map(longitude, latitude, projection=projection)
projection
plot(Inf, Inf)
range(Inf)
is.finite(range(Inf))
any(!is.finite(range(Inf)))
Q
base::source("/Users/kelley/Dropbox/a.R")
str(time)
str(height)
base::source("/Users/kelley/git/dalhousie/oce3001/exercises/hurricane_harvey/river.R")
base::source("/Users/kelley/git/dalhousie/proposals/NSERC/dg2017/work/11.R")
plot(d$density, d$geometric, xlab="Density [kg/m^3]", ylab="Altitude [m]", type='b')
nls(density~rho0*exp(-geometric/L), data=d, start=list(rho0=1, L=1e3))
nls(density~rho0*exp(-geometric/L), data=d, start=list(rho0=1, L=10e3))
predict(m, z)
z
predict(m, list(geometric=z))
coef(m)
mtext(sprintf("%.2f*exp(-z/%.1g)", coef(m)[[1]], coef(m)[[2]]), side=3, line=0)
mtext(sprintf("%.2f*exp(-z/%.2g)", coef(m)[[1]], coef(m)[[2]]), side=3, line=0)
which.min(abs(z))
z[which.min(abs(z))]
s <- smooth.spline(d$geometric, d$density)
s
predict(s)
z <- seq(0, max(d$geometric), length.out=100)
predict(s, z)
lines(s$x, s$y, col=3)
lines(s$y, s$x, col=3)
base::source("/Users/kelley/git/dalhousie/ocex120/figures/atmosphere.R")
plotTS(as.ctd(c(33, 38), c(-2, 25), rep(0,2)), type="n")
plotTS(as.ctd(c(33, 38), c(-2, 25), rep(0,2),long=-30,lat=30), type="n")
pdf("TS.pdf");plotTS(as.ctd(c(33, 38), c(-2, 25), rep(0,2),long=-30,lat=30), type="n");dev.off()
data(ctd)
plot(ctd)
pdf("a.pdf");plot(ctd);dev.off()
jitter(1:10)
?jitter()
rep(1,10)+jitter(rep(1,10))
help(jitter)
rep(1, 10)+jitter(rep(1, 10), 0.1)
attendance[,3]
attendance[,4]
abline(v=1)
help(text)
text(rep(1, 10)+jitter(rep(1, 10), 0.1), attendance[,2], attendance[,1], font=2)
text(rep(1, 10)+jitter(rep(1, 10), 0.1), attendance[,2], attendance[,1], font=2, cex=20)
attendance[,2],
attendance[,2]
head(attendance)
text(rep(1, 10)+jitter(rep(1, 10), 0.1), attendance[,3], attendance[,1], font=2, cex=20)
text(rep(1, 10)+jitter(rep(1, 10), 0.1), attendance[,3], attendance[,1], font=2, cex=200)
text(rep(1, 10)+jitter(rep(1, 10), 0.1), attendance[,3], attendance[,1], font=2, cex=2)
attendance[,1]
points(rep(1, 10)+0*jitter(rep(1, 10), 0.1), attendance[,3])
points(rep(1, 10)+jitter(rep(1, 10), 0.1), attendance[,3])
points(rep(1, 10)+jitter(rep(1, 10), 0.01), attendance[,3])
rep(1, 10)+jitter(rep(1, 10), 0.01)
par('usr')
table(attendance)
attendance
x0 <- mean(par("usr")[1:2])
x <- rep(x0, np)
o <- order(y)
o
attendance <- attendance[, o]
base::source("/Users/kelley/git/senate/stats.R")
download.met
rho<-1000
CP<-4e3
H<=30
H<-30
F<-100
F/(rho*Cp*H)
F/(rho*CP*H)
F/(rho*CP*H) * 3 * 28 * 86400
plot(ctd3)
base::source("/tmp/r-plugin-kelley/Rsource-95777-hydrography_profile_calculations.Rmd")
readlines(text=data)
readLines(text=data)
help(readLines)
readLines(con=data)
d <- gsub("^* ([0-9.]*) .*", "\\1", data)
d <- gsub("^* ([0-9.]*) .*$", "\\1", data)
d <- gsub("^* ([0-9.]*)", "\\1", data)
d <- gsub("^\* ([0-9.]*) .*$", "\\1", data)
d <- gsub("^\\* ([0-9.]*) .*$", "\\1", data)
d <- gsub("^[*] ([0-9.]*) .*$", "\\1", data)
d <- gsub("^([0-9.]*) .*$", "\\1", data)
d <- gsub("^([0-9.]*) .*", "\\1", data)
data
data[1]
sum <-
2997.00 # St Vincent's Nursing Home (receipt 3277, dated 2016 Nov 3)
base::source("/Users/kelley/Dropbox/TaxTron/2016documents/summary.R")
plotTS(argo)
data(argo)
plot(argo, which="trajectory", coastline=coastlineWorld)
plot(argo, which="trajectory", coastline='coastlineWorld')
plotTS(handleFlags(subset(argo, dataMode=='D'))
plotTS(handleFlags(argo))
base::source("/Users/kelley/git/dalhousie/proposals/NSERC/dg2017/work/glider/12.R")
x <- seq(0, 1, length.out=100)
a <- max(x) / 4
y <- ifelse (x < a, -x,
ifelse(x < 1.5*a, -a+x, 3))
y <- ifelse (x < a, -x, ifelse(x < b, -a+x, -x))
y <- ifelse (x < a, -x, ifelse(x < b, -2*a+x, -x))
y <- ifelse (x < a, -x, ifelse(x < b, -2*a+x, -(x-b)))
plot(x,y)
plot(x,y, type='l')
x <- seq(0, 1, length.out=300)
a <- 0.2
b <- 0.3
y <- ifelse (x < a, -x, ifelse(x < b, -2*a+x, -(b-a)-(x-b)))
plot(x,y, type='l', xlab='Horizontal', ylab='Depth')
plot(x,y, type='l', xlab='Horizontal', ylab='Depth', lwd=2)
plot(x,y, type='l', xlab='Horizontal', ylab='Depth', lwd=2, xaxs='i', yaxs='i')
plot(x,y, type='l', xlab='x/L', ylab='z/H', lwd=2, xaxs='i', yaxs='i')
xx <- c(x[1], x, x[1])
yy <- c(0, y, tail(y,1))
polygon(xx, yy, col='lightgray'
x <- seq(0, 2, length.out=300)
a <- 0.4
b <- 0.6
c <- 1.5
s <- 1
y <- ifelse(x < a, -s*x,
ifelse(x < b, -s*a+s*(x-a),
ifelse(x < c, -s*a+s*(b-a)-(x-b),
-s*a+s*(b-a)-(c-b))))
par(mar=c(3, 3, 1, 1), mgp=c(2, 0.7, 0))
bottom <- -1.2
yy <- c(bottom, y, bottom)#, 0, 0, bottom)
xx <- c(x[1], x, max(x), 0.1+max(x))#, 0.2+max(x), 0.3+max(x))
yy <- c(bottom, y, bottom, 0)# , 0, bottom)
xx <- c(x[1], x, max(x))#, 0.1+max(x))#, 0.2+max(x), 0.3+max(x))
yy <- c(bottom, y, bottom)#, 0)# , 0, bottom)
xx <- c(x[1], x, max(x), 0.1+max(x))#, 0.1+max(x))#, 0.2+max(x), 0.3+max(x))
yy <- c(bottom, y, 0, bottom)#, 0)# , 0, bottom)
yy <- c(bottom, y, 0, bottom, 0)#, 0)# , 0, bottom)
yy <- c(bottom, y, 0, bottom, bottom)#, 0)# , 0, bottom)
xx <- c(x[1], x, max(x), 0.1+max(x), 0.2+max(x))#, 0.1+max(x))#, 0.2+max(x), 0.3+max(x))
ylim=c(bottom, 0), xlim=c(0, max(x)+0.3))
plot(x,y, type='l', xlab='x/L', ylab='z/H', lwd=2, xaxs='i', yaxs='i',
ylim=c(bottom, 0), xlim=c(0, max(x)+0.1))
xx <- c(x[1], x, max(x), 0.1+max(x), 0.1+max(x))#, 0.1+max(x))#, 0.2+max(x), 0.3+max(x))
yy <- c(bottom, y, 0, 0, bottom)#, 0)# , 0, bottom)
polygon(xx, yy, col='lightgray')
grid()
Cpa <- 1000
n <- 10
w <- rnorm(n)
T <- rnorm(n) + 0.5 * w
wp <- w - mean(w)
Tp <- T - mean(T)
print(data.frame(t, wp, Tp))
print(data.frame(t, "w'"=wp, Tp))
print(data.frame(t, wprime=wp, Tprime=Tp))
print(data.frame(t, w=w, T=T))
print(data.frame(t, w=w, T=T), digits=3)
rhoa*Cpa*mean(wp*Tp)
cat(data.frame(t, w=w, T=T), digits=1)
print(data.frame(t, w=w, T=T), digits=1)
print(data.frame(t, w=w, T=T), digits=1,text='dan')
capture.output(print(data.frame(t, w=w, T=T), digits=1))
a<-capture.output(print(data.frame(t, w=w, T=T), digits=1))
print(a)
set.seed(123)
rhoa <- 1.2
CPa <- 1000
n <- 6
t <- seq(0, 100, length.out=n)
w <- rnorm(n, sd=1)
T <- 10 + rnorm(n) + 0.4 * w
print(data.frame(t, w=w, T=T), digits=2)
wbar <- mean(w)
wp <- w - wbar
message('wbar=', round(wbar, 4))
message('wp=', paste(round(wp, 4), collapse=' '))
message('Tbar=', round(Tbar, 4))
message('Tp=', paste(round(Tp, 4), collapse=' '))
message('flux=', round(flux, 3))
T <- 10 + rnorm(n, sd=0.2) + 0.5 * w
Tbar <- mean(T)
Tp <- T - Tbar
plot(t, wp)
plot(t, Tp)
}
par(mfrow=c(3,1))
abline(Tp~wp)
par(mfrow=c(2,2))
plot(t, w)
plot(t, T)
plot(wp, Tp)
abline(lm(Tp~wp))
flux <- rhoa * CPa * mean(wp*Tp)
a<-24
b<-23.93447
(a-b))/a
a/(a-b)
citation(oce)
citation('oce')
citation('gsw')
citation('ocedata')
vity
gravity
quartz(pointsize=16)
lat<-seq(-90,90,1); plot(lat, gravity(lat=lat), type='l')
lat<-seq(-90,90,1); plot(lat, (gravity(lat=lat)-9.8)/9.8, type='l')
pi^2
d <- read.table(text=data, header=TRUE)
p <- propagate(expression(R^2/tau/9.869604), data=d)
p
summary(p)
plot(p)
d
plot(p, logx=TRUE)
?propagate
base::source("/Users/kelley/git/oar/sandbox/propagate.R")
nu <- 1.0e-6
gamma <- 3 # for most rocks; 9 for Cu
g <- 9.8
A <- round(sqrt((9/2)*nu/(gamma-1)/g), 4)
W <- c(4e-4, 2.44e-5, 2e-6, 1.7e-4, 1.8e-5, 3.0e-6, 3e-5, 2.21e-6, 1.6e-5) # m/s
R <- A * sqrt(W)
R
par(mfrow=c(2,1))
par(mfrow=c(1, 2))
boxplot(R)
hist(W)
hist(R)
boxplot(W)
boxplot(log10(W))
boxplot(log10(R))
boxplot(log10(W), ylab=expression(log[10]*W))
boxplot(log10(R), ylab=expression(log[10]*R))
boxplot(W, ylab='W')
boxplot(R, ylab='R')
boxplot(W, ylab='Falling speed, W [m/s]')
boxplot(R, ylab='Radius, R [m]')
library(maps)#
map('world',, projection='mollweide')
plot(coastlineWord, proj="+proj=moll")
data(coastlineWorld);plot(coastlineWord, proj="+proj=moll")
data(coastlineWorld);plot(coastlineWorld, proj="+proj=moll")
data(coastlineWorld);plot(coastlineWorld, proj="+proj=moll",col='lightgray')
library(sp)
library(maptools)
?nowrapSpatialPolygons
install.packages("xkcd")
library("xkcd")
vignette("xkcd-intro")
write.table
write.table(data.frame(lon=lon, lat=lat), file="lonlat.dat", row.nams=FALSE
write.table(data.frame(lon=lon, lat=lat), file="lonlat.dat", row.names=FALSE
write.table(data.frame(lon=lon, lat=lat), file="lonlat.dat", rownames=FALSE
)
system("proj +proj=lsat +lsat=1 +path=200 < lonlat.dat > xy.dat")
base::source("/Users/kelley/lsat.R")
system(sprintf('cat lonlat.dat | binproj4/bin/proj +proj=lsat +lsat=%d +path=%d | grep -v nan | wc', 1, 2))
for (sat in 1:4) for (path in 1:251) system(sprintf('cat lonlat.dat | binproj4/bin/proj +proj=lsat +lsat=%d +path=%d | grep -v nan | wc', sat, path))
k1m <- 1.19e-4
k1e <- 0.11e-4
2*pi/k1m
2*pi/k1m / 1e3
2*pi/(k1m+k1e) / 1e3
2*pi/(k1m-k1e) / 1e3
58-48
(58-48)/2
k2m <- 0.72e-4
k2e <- 0.05e-4
2*pi/(k2m-k2e) / 1e3
2*pi/(k2m+k2e) / 1e3
(93.77 - 81.6)/2
2017-1980
(2017-1980)+25
a<-1e3*(c(88.977,95.043,98.483,101.105,111.880,114.227,117.233,117.233,118.407,119.589))
length(t)
a<-1e3*(c(88.977,95.043,98.483,101.105,111.880,114.227,117.233,117.233,117.233,118.407,119.589))
length(a)
t
a
a<-1e3*(c(88.977,95.043,98.483,101.105,107.766,111.880,114.227,117.233,117.233,117.233,118.407,119.589))
t<-2004:2015
plot(t,a)
plot(t,log10(a))
la <- log10(a)
lm(la~t)
?'plot,topo-method'
plot(coastlineWorld)
mapPlot(coastlineWorld, proj="+proj=moll")
mapPlot(coastlineWorld, proj="+proj=moll", col='lightgray')
mapPlot(coastlineWorld, proj="+proj=merc", col='lightgray')
mapPlot(coastlineWorld, proj="+proj=lonlat", col='lightgray')
mapPlot(coastlineWorld, proj="+proj=lonlat", col='lightgray', clon=-60, clat=40)
mapPlot(coastlineWorld, proj="+proj=lonlat", col='lightgray', longitudelim=c(-150,-20), latitudelim=c(30, 60))
mapPlot(coastlineWorld, proj="+proj=lcc", col='lightgray', longitudelim=c(-150,-20), latitudelim=c(30, 60))
mapPlot(coastlineWorld, proj="+proj=lcc +lon_0=-100", col='lightgray', longitudelim=c(-150,-20), latitudelim=c(30, 60))
mapPlot(coastlineWorld, proj="+proj=lcc +lon_0=-60", col='lightgray', longitudelim=c(-150,-20), latitudelim=c(30, 60))
mapContour(topoWorld[["longitude"]], topoWorld[["latitude"]], topoWorld[["z"]], level=-1000, col='red')
mapContour(topoWorld[["longitude"]], topoWorld[["latitude"]], topoWorld[["z"]], level=-150, col='red')
base::source("/Users/kelley/git/dalhousie/ocex120/lectures/figures/shelf/shelf.R")
library(oce)#
data(topoWorld)#
cm <- colormap(topoWorld[['z']], name='gmt_relief')#
drawPalette(colormap=cm)#
mapPlot(c(-180,180), c(-90,90), type="n")#
mapImage(topoWorld, colormap=cm)
??biwavelet
edit(wt)
wt.bases
rcpp_wt_bases_morlet()
rcpp_wt_bases_morlet(k=3)
rcpp_wt_bases_morlet(k=3,scale=1)
?wt
plot(morlet)
plot(Re(morlet))
plot(RE(morlet))
??real
Real(1i)
??imaginary
??complex
Re(1i)
Im(1i)
eta <- seq(-10, 10, length.out=200)
plot(eta, Re(morlet(eta)))
quartz()
library(biwavelet)
wt
morlet <- function(eta) (1/pi^0.25) * exp(1i*6*eta) * exp(-eta^2/2)
eta <- seq(-5, 5, length.out=200)
plot(eta, Re(morlet(eta)), type='l')
base::source("/Users/kelley/Library/Containers/com.apple.mail/Data/Library/Mail Downloads/EDBDBF94-9D27-4981-9D5E-3F4FB5C4C05E/rotary_spectrum.R")
tau<-29
2*pi/tau
2*pi/tau / 3600
2*pi/tau/24 / 3600
2*pi/tau/24
2*pi/71/24
base::source("/Users/kelley/git/MScPaperLayton/revision1/figures/12_uvOnMapFinal_dk.R")
30*86400*2.05e-7
axis(1, at=(0:11)/12, label=rep("",12)) #c(mon, mon))
axis(1, at=(0:47)/12, label=rep("",12)) #c(mon, mon))
mtext(c(mon,mon), at=seq(0, 2-1/24, by=1/12))
mtext(c(mon,mon), side=1, at=seq(0, 2-1/24, by=1/12))
axis(1, at=(0:47)/12, label=rep("",48)) #c(mon, mon))
base::source("/Users/kelley/git/dalhousie/oce3001/evaluation/2017/exam/two_layer.R")
data(coastlineWorld)
mapPlot(coastlineWorld,projection="+proj=bonn")
mapPlot(coastlineWorld,projection="+proj=bonn"3)
mapPlot(coastlineWorld,projection="+proj=bonne")
mapPlot(coastlineWorld,projection="+proj=bonne +lon_0=0")
mapPlot(coastlineWorld,projection="+proj=bonne +lat_1=0")
mapPlot(coastlineWorld,projection="+proj=bonne +lat_1=90")
mapPlot(coastlineWorld,projection="+proj=bonne +lat_1=90",col="lightgray")
mapPlot(coastlineWorld,projection="+proj=bonne +lat_1=90",col="lightgray",grid=5)
mapPlot(coastlineWorld,projection="+proj=bonne +lat_1=90",col="lightgray"10)
mapPlot(coastlineWorld,projection="+proj=bonne +lat_1=90",col="lightgray",grid=10)
mapPlot(coastlineWorld,projection="+proj=bonne +lat_1=90",col="lightgray",grid=15)
mapPlot(coastlineWorld,projection="+proj=bonne +lat_1=45",col="lightgray",grid=15)
par(mar=rep(1,4));mapPlot(coastlineWorld,projection="+proj=bonne +lat_1=45",col="lightgray",grid=15)
demo(colors)
library(oce)
data("tuktoyaktuk")
base::source("/Users/kelley/a.R")
names(m@data)
str(m@data)
d <- as.data.frame(m@data[c("const", "name", "freq", "amplitude", "phase", "p")])
print(d)
help(colormap)
base::source("/Users/kelley/git/oar/gui/SST.R")
12/266
setwd("/Users/kelley/dotfiles/R")
options()
quit(save = "no")
options(device)
options('device')
q()
